{"version":3,"sources":["test.js"],"names":["chai","use","chatHttp","expect","describe","it","done","book","title","price","description","request","app","post","set","send","end","err","res","status","to","equal","body","data","include","id","get","should","have","property","bookId","eql","updateBook","put"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AAEAA,iBAAKC,GAAL,CAASC,oBAAT;;IACQC,M,GAAWH,gB,CAAXG,M;AAERC,QAAQ,CAAC,mBAAD,EAAsB,YAAM;AAChCC,EAAAA,EAAE,CAAC,6BAAD,EAAgC,UAACC,IAAD,EAAU;AACxC,QAAMC,IAAI,GAAG;AACTC,MAAAA,KAAK,EAAE,uBADE;AAETC,MAAAA,KAAK,EAAE,IAFE;AAGTC,MAAAA,WAAW,EAAE;AAHJ,KAAb;;AAKAV,qBAAKW,OAAL,CAAaC,eAAb,EACKC,IADL,CACU,aADV,EAEKC,GAFL,CAES,QAFT,EAEmB,kBAFnB,EAGKC,IAHL,CAGUR,IAHV,EAIKS,GAJL,CAIS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACff,MAAAA,MAAM,CAACe,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAlB,MAAAA,MAAM,CAACe,GAAG,CAACI,IAAJ,CAASC,IAAV,CAAN,CAAsBH,EAAtB,CAAyBI,OAAzB,CAAiC;AAC7BC,QAAAA,EAAE,EAAE,CADyB;AAE7BjB,QAAAA,KAAK,EAAED,IAAI,CAACC,KAFiB;AAG7BC,QAAAA,KAAK,EAAEF,IAAI,CAACE,KAHiB;AAI7BC,QAAAA,WAAW,EAAEH,IAAI,CAACG;AAJW,OAAjC;AAMAJ,MAAAA,IAAI;AACP,KAbL;AAcH,GApBC,CAAF;AAsBAD,EAAAA,EAAE,CAAC,+CAAD,EAAkD,UAACC,IAAD,EAAU;AAC1D,QAAMC,IAAI,GAAG;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;;AAGAR,qBAAKW,OAAL,CAAaC,eAAb,EACKC,IADL,CACU,aADV,EAEKC,GAFL,CAES,QAFT,EAEmB,kBAFnB,EAGKC,IAHL,CAGUR,IAHV,EAIKS,GAJL,CAIS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACff,MAAAA,MAAM,CAACe,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAf,MAAAA,IAAI;AACP,KAPL;AASH,GAbC,CAAF;AAeAD,EAAAA,EAAE,CAAC,uBAAD,EAA0B,UAACC,IAAD,EAAU;AAClCN,qBAAKW,OAAL,CAAaC,eAAb,EACKc,GADL,CACS,aADT,EAEKZ,GAFL,CAES,QAFT,EAEkB,kBAFlB,EAGKE,GAHL,CAGS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACff,MAAAA,MAAM,CAACe,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAc,CAAd,EAAiBI,MAAjB,CAAwBC,IAAxB,CAA6BC,QAA7B,CAAsC,IAAtC;AACAX,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAc,CAAd,EAAiBI,MAAjB,CAAwBC,IAAxB,CAA6BC,QAA7B,CAAsC,OAAtC;AACAX,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAc,CAAd,EAAiBI,MAAjB,CAAwBC,IAAxB,CAA6BC,QAA7B,CAAsC,aAAtC;AACAX,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAc,CAAd,EAAiBI,MAAjB,CAAwBC,IAAxB,CAA6BC,QAA7B,CAAsC,OAAtC;AACAvB,MAAAA,IAAI;AACP,KAVL;AAWH,GAZC,CAAF;AAcAD,EAAAA,EAAE,CAAC,+BAAD,EAAkC,UAACC,IAAD,EAAU;AAC1C,QAAMwB,MAAM,GAAG,CAAf;;AACA9B,qBAAKW,OAAL,CAAaC,eAAb,EACKc,GADL,sBACuBI,MADvB,GAEKhB,GAFL,CAES,QAFT,EAEkB,kBAFlB,EAGKE,GAHL,CAGS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACff,MAAAA,MAAM,CAACe,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcI,MAAd,CAAqBC,IAArB,CAA0BC,QAA1B,CAAmC,IAAnC;AACAX,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcI,MAAd,CAAqBC,IAArB,CAA0BC,QAA1B,CAAmC,OAAnC;AACAX,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcI,MAAd,CAAqBC,IAArB,CAA0BC,QAA1B,CAAmC,aAAnC;AACAX,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcI,MAAd,CAAqBC,IAArB,CAA0BC,QAA1B,CAAmC,OAAnC;AACAvB,MAAAA,IAAI;AACP,KAVL;AAWH,GAbC,CAAF;AAcAD,EAAAA,EAAE,CAAC,kCAAD,EAAqC,UAACC,IAAD,EAAU;AAC7C,QAAMwB,MAAM,GAAG,EAAf;;AACA9B,qBAAKW,OAAL,CAAaC,eAAb,EACKc,GADL,sBACuBI,MADvB,GAEKhB,GAFL,CAES,QAFT,EAEkB,kBAFlB,EAGKE,GAHL,CAGS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACff,MAAAA,MAAM,CAACe,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,MAAAA,GAAG,CAACI,IAAJ,CAASK,MAAT,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,SAA9B,EACqBE,GADrB,wBACyCD,MADzC;AAEAxB,MAAAA,IAAI;AACP,KARL;AASH,GAXC,CAAF;AAYAD,EAAAA,EAAE,CAAC,oCAAD,EAAuC,UAACC,IAAD,EAAU;AAC/C,QAAMwB,MAAM,GAAG,KAAf;AACA,QAAME,UAAU,GAAG;AACfP,MAAAA,EAAE,EAAE,KADW;AAEfjB,MAAAA,KAAK,EAAE,4BAFQ;AAGfC,MAAAA,KAAK,EAAE,QAHQ;AAIfC,MAAAA,WAAW,EAAE;AAJE,KAAnB;;AAMAV,qBAAKW,OAAL,CAAaC,eAAb,EACKqB,GADL,sBACuBH,MADvB,GAEKhB,GAFL,CAES,QAFT,EAEkB,kBAFlB,EAGKE,GAHL,CAGS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACnBf,MAAAA,MAAM,CAACe,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,MAAAA,GAAG,CAACI,IAAJ,CAASK,MAAT,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,SAA9B,EACgBE,GADhB;AAEIzB,MAAAA,IAAI;AACP,KARL;AASH,GAjBC,CAAF;AAkBAD,EAAAA,EAAE,CAAC,sBAAD,EAAyB,UAACC,IAAD,EAAS;AAChC,QAAMmB,EAAE,GAAE,CAAV;AACA,QAAMO,UAAU,GAAG;AAEfxB,MAAAA,KAAK,EAAE,4BAFQ;AAGfC,MAAAA,KAAK,EAAE,QAHQ;AAIfC,MAAAA,WAAW,EAAE;AAJE,KAAnB;;AAMAV,qBAAKW,OAAL,CAAaC,eAAb,EACKqB,GADL,sBACuBR,EADvB,GAEKX,GAFL,CAES,QAFT,EAEkB,kBAFlB,EAGKC,IAHL,CAGUiB,UAHV,EAIKhB,GAJL,CAIS,UAACC,GAAD,EAAKC,GAAL,EAAY;AACbf,MAAAA,MAAM,CAACe,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAlB,MAAAA,MAAM,CAACe,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcf,KAAf,CAAN,CAA4BY,EAA5B,CAA+BC,KAA/B,CAAqCW,UAAU,CAACxB,KAAhD;AACAL,MAAAA,MAAM,CAACe,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcd,KAAf,CAAN,CAA4BW,EAA5B,CAA+BC,KAA/B,CAAqCW,UAAU,CAACvB,KAAhD;AACAS,MAAAA,GAAG,CAACI,IAAJ,CAASK,MAAT,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,SAA9B;AACA1B,MAAAA,MAAM,CAACe,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcb,WAAf,CAAN,CAAkCU,EAAlC,CAAqCC,KAArC,CAA2CW,UAAU,CAACtB,WAAtD;AACH,KAVL;;AAWIJ,IAAAA,IAAI;AACX,GApBC,CAAF;AAqBAD,EAAAA,EAAE,CAAC,wCAAD,EAA2C,UAACC,IAAD,EAAU;AACnD,QAAMmB,EAAE,GAAG,MAAX;;AACAzB,qBAAKW,OAAL,CAAaC,eAAb,iCAC0Ba,EAD1B,GAEKX,GAFL,CAES,QAFT,EAEkB,kBAFlB,EAGKE,GAHL,CAGS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACnBf,MAAAA,MAAM,CAACe,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,MAAAA,GAAG,CAACI,IAAJ,CAASK,MAAT,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,SAA9B,EACqBE,GADrB,CACyB,sBADzB;AAEIzB,MAAAA,IAAI;AACP,KARL;AASH,GAXC,CAAF;AAYAD,EAAAA,EAAE,CAAC,mCAAD,EAAqC,UAACC,IAAD,EAAS;AAC5C,QAAMmB,EAAE,GAAI,CAAZ;;AACAzB,qBAAKW,OAAL,CAAaC,eAAb,iCAC0Ba,EAD1B,GAEKX,GAFL,CAES,QAFT,EAEkB,kBAFlB,EAGKE,GAHL,CAGS,UAACC,GAAD,EAAKC,GAAL,EAAY;AACb;AACAf,MAAAA,MAAM,CAACe,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAlB,MAAAA,MAAM,CAACe,GAAG,CAACI,IAAJ,CAASC,IAAV,CAAN,CAAsBH,EAAtB,CAAyBI,OAAzB,CAAiC,EAAjC;AACAlB,MAAAA,IAAI;AACP,KARL;AASH,GAXC,CAAF;AAYH,CA7IO,CAAR","sourceRoot":"/home/gal1le0/development/tuto/nodejs/APIs/with-psql/api/test","sourcesContent":["import chai from 'chai';\nimport chatHttp from 'chai-http';\nimport 'chai/register-should';\nimport app from '../app';\n\nchai.use(chatHttp);\nconst { expect } = chai;\n\ndescribe('Testing endpoints', () => {\n    it('should create  a book entry', (done) => {\n        const book = {\n            title: 'First awesome browser',\n            price: \"45\",\n            description: 'A practical guide to shutup'\n        };\n        chai.request(app)\n            .post('/api/books/')\n            .set('Accept', 'application/json')\n            .send(book)\n            .end((err, res) => {\n                expect(res.status).to.equal(201);\n                expect(res.body.data).to.include({\n                    id: 1,\n                    title: book.title,\n                    price: book.price,\n                    description: book.description\n                });\n                done();\n            });\n    });\n\n    it('should not create a book with incomplete data', (done) => {\n        const book = {\n            title: 'First awesome browser',\n        };\n        chai.request(app)\n            .post('/api/books/')\n            .set('Accept', 'application/json')\n            .send(book)\n            .end((err, res) => {\n                expect(res.status).to.equal(401);\n                done();\n            });\n        \n    });\n\n    it('should  get all books', (done) => {\n        chai.request(app)\n            .get('/api/books/')\n            .set('Accept','application/json')\n            .end((err, res) => {\n                expect(res.status).to.equal(200);\n                res.body.data[0].should.have.property('id');\n                res.body.data[0].should.have.property('title');\n                res.body.data[0].should.have.property('description');\n                res.body.data[0].should.have.property('price');\n                done();\n            });\n    });\n\n    it('should  get a particular Book', (done) => {\n        const bookId = 1;\n        chai.request(app)\n            .get(`/api/books/${bookId}`)\n            .set('Accept','application/json')\n            .end((err, res) => {\n                expect(res.status).to.equal(203);\n                res.body.data.should.have.property('id');\n                res.body.data.should.have.property('title');\n                res.body.data.should.have.property('description');\n                res.body.data.should.have.property('price');\n                done();\n            });\n    });\n    it('should not get a particular Book', (done) => {\n        const bookId = 34;\n        chai.request(app)\n            .get(`/api/books/${bookId}`)\n            .set('Accept','application/json')\n            .end((err, res) => {\n                expect(res.status).to.equal(400);\n                res.body.should.have.property('message')\n                                    .eql(`Book with id ${bookId} cant be found 400`);\n                done();\n            });\n    });\n    it('should get a non int Id for update', (done) => {\n        const bookId = 'ggg';\n        const updateBook = {\n            id: 'rer',\n            title: 'Updated Awesome book again',\n            price: '$11.99',\n            description: 'We have updated the price'\n        };\n        chai.request(app)\n            .put(`/api/books/${bookId}`)\n            .set('Accept','application/json')\n            .end((err, res) => {\n            expect(res.status).to.equal(400);\n            res.body.should.have.property('message')\n                           .eql(`Please provide a parameter 400`);\n                done();\n            });\n    });\n    it('should update a book', (done) =>{\n        const id =1;\n        const updateBook = {\n\n            title: 'Updated Awesome book again',\n            price: '$15.99',\n            description: 'We have updated the price'\n        };\n        chai.request(app)\n            .put(`/api/books/${id}`)\n            .set('Accept','application/json')\n            .send(updateBook)\n            .end((err,res) =>{\n                expect(res.status).to.equal(202);\n                expect(res.body.data.title).to.equal(updateBook.title);\n                expect(res.body.data.price).to.equal(updateBook.price);\n                res.body.should.have.property('message');\n                expect(res.body.data.description).to.equal(updateBook.description);\n            });\n            done();\n    })\n    it('should delete not book with a wrong id', (done) => {\n        const id = 'rroi';\n        chai.request(app)\n            .delete(`/api/books/${id}`)\n            .set('Accept','application/json')\n            .end((err, res) => {\n            expect(res.status).to.equal(404);\n            res.body.should.have.property('message')\n                                .eql('cant delete book 404');\n                done();\n            });\n    });\n    it('should delete a book successfully',(done) =>{\n        const id =  1;\n        chai.request(app)\n            .delete(`/api/books/${id}`)\n            .set('Accept','application/json')\n            .end((err,res) =>{\n                //res.should.have.property('message');\n                expect(res.status).to.equal(204);\n                expect(res.body.data).to.include({});\n                done();\n            });\n    });\n});"]}